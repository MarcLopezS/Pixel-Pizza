import function resetGUI();
import function animationPickUpOrOpen(int);
// room script file

function repeatedly_execute_always(){
  
}



function region1_WalksOnto()
{
  cCharacter.SetProperty("state",1);
  cCharacter.StopMoving();
  cCharacter.ChangeView( MOTOVIEW);
}

function room_FirstLoad()
{
  luz1.SetView(LUZVIEW);
  aElevator.Play(eAudioPriorityHigh);
  Wait(50);
  luz1.Visible=false;
  luz2.SetView(LUZVIEW);
  aElevator.Play(eAudioPriorityHigh);
  Wait(50);
  luz2.Visible=false;
  luz3.SetView(LUZVIEW);
  aElevator.Play(eAudioPriorityHigh);
  Wait(50);
  luz3.Visible=false;
  luz4.SetView(LUZVIEW);
  aElevator.Play(eAudioPriorityHigh);
  Wait(50);
  luz4.Visible=false;
  luz5.SetView(LUZVIEW);
  aElevator.Play(eAudioPriorityHigh);
  Wait(50);
  luz5.Visible=false;
  luz6.SetView(LUZVIEW);
  aElevator.Play(eAudioPriorityHigh);
  Wait(50);
  luz6.Visible=false;
  luz7.SetView(LUZVIEW);
  aElevator.Play(eAudioPriorityHigh);
  Wait(100);
  cCharacter.Transparency=0;
  cCharacter.Walk(133, 230, eBlock, eWalkableAreas);
  //cCharacter.Say("Dios! como pueden haber tantas escaleras en un edificio!");
  //cCharacter.Say("Parece que las han puesto para jorobar!");
  cCharacter.Say("Joder, mira que estropearse el ascensor justo hoy...");
  aPassilloBackground.Play(eAudioPriorityHigh, eRepeat);
  
  gGui1.Visible=true;
}

function hHotspot4_AnyClick()
{
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("No se abre");          
          break;
      case eModeClose:
          cCharacter.Say("No se cierra");
          break;
      case eModeUseinv:
          cCharacter.Say("Mejor no");
          break;
      case eModePickup:
          cCharacter.Say("Esta incrustado en la pared"); 
          break;
      case eModeLookat:
          cCharacter.Say("Parece ser que es el botón para llamar al timbre.");
          break;
      case eModeTalkto:
          cCharacter.Say("Mejor no");
          break;
      case eModePush:
          cCharacter.Walk(198, 196, eBlock, eWalkableAreas);
          oCable.Visible=true;
          aTimbreRoto.Play( eAudioPriorityHigh);
          Wait(20);
          hotspot[4].Enabled=false;
          cCharacter.Say("¡Lo que me faltaba!");
          cCharacter.Say("Y ahora como sabrá que estoy aquí...");
          cCharacter.Say("¡No pienso picar a la puerta con los nudillos ni de coña! ¡És una puerta de metal!");
          cCharacter.Say("Habrá que reparar el timbre...");
          break;
      case eModePull:
          cCharacter.Say("Mejor no.");
          break;
      case eModeInteract:
          cCharacter.Walk(198, 196, eBlock, eWalkableAreas);
          oCable.Visible=true;
          aTimbreRoto.Play( eAudioPriorityHigh);
          Wait(20);
          hotspot[4].Enabled=false;
          cCharacter.Say("Lo que me faltaba!");
          cCharacter.Say("Y ahora como sabrá que estoy aquí...");
          cCharacter.Say("No pienso picar a la puerta con los nudillos ni de coña! ¡És una puerta de metal!");
          cCharacter.Say("Habrá que reparar el timbre...");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    resetGUI();
}

function oCable_AnyClick()
{
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("Ya está abierto");          
          break;
      case eModeClose:
          cCharacter.Say("Mejor no.");
          break;
      case eModeUseinv:
          cCharacter.Say("Mejor no.");
          break;
      case eModePickup:
          cCharacter.Say("No puedo arrancarlos de la pared");
          break;
      case eModeLookat:
          cCharacter.Say("Son 4 cables de varios colores. Si los conecto entre ellos a lo mejor pasa algo...");
          break;
      case eModeTalkto:
          cCharacter.Say("No voy a poder hablar.");
          break;
      case eModePush:
          cCharacter.Say("Mejor no.");
          break;
      case eModePull:
          cCharacter.Say("Prefiero no tirar de los cables de la pared.");
          break;
      case eModeInteract:
          cCharacter.Walk(198, 196, eBlock, eWalkableAreas);
          dCableDialog.Start();
          break;
    }
    resetGUI();
    cCharacter.FaceDirection(eDirectionRight);

    
}

function hHotspot5_AnyClick()
{
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("Lo de abrir plantas no me va.");          
          break;
      case eModeClose:
          cCharacter.Say("Cierrate!");
          break;
      case eModeUseinv:
          cCharacter.Say("No creo que lo quiera.");
          break;
      case eModePickup:
          cCharacter.Say("Este helecho tiene muy mala pinta... Mejor no.");
          break;
      case eModeLookat:
          cCharacter.Say("Parece ser que esta planta ha vivido tiempos mejores…");
          break;
      case eModeTalkto:
          cCharacter.Say("Plantita plantita, tu que eres la más bonita.");
          break;
      case eModePush:
          cCharacter.Say("¡La pobre planta no me ha hecho nada!");
          break;
      case eModePull:
          cCharacter.Say("¡La pobre planta no me ha hecho nada!");
          break;
      default:
          cCharacter.Say("Mejor no...");
          break;
    }
    resetGUI();

}

function hHotspot2_AnyClick()
{
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("No llego...");          
          break;
      case eModeClose:
          cCharacter.Say("No llego...");
          break;
      case eModeUseinv:
          cCharacter.Say("Mejor no...");
          break;
      case eModePickup:
          cCharacter.Say("No llego.");
          break;
      case eModeLookat:
          cCharacter.Say("Una cámara de seguridad, parece ser que alguien no me quita el ojo de encima.");
          break;
      case eModeTalkto:
          cCharacter.Say("¡Hooooola! Le traigo la pizza, ¿Me abre?");
          break;
      case eModePush:
          cCharacter.Say("No llego...");
          break;
      case eModePull:
          cCharacter.Say("No llego...");
          break;
    }
    resetGUI();
}

function hHotspot1_AnyClick()
{
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("Esta completamente cerrada");          
          break;
      case eModeClose:
          cCharacter.Say("Ya está cerrada");
          break;
      case eModeUseinv:
          cCharacter.Say("Mejor no...");
          break;
      case eModePickup:
          cCharacter.Say("¿Coger una puerta enorme de acero? Si claro."); 
          break;
      case eModeLookat:
          cCharacter.Say("Es una puerta robusta de acero, parece que alguien no quiere que le molesten.");
          break;
      case eModeTalkto:
          cCharacter.Say("¿Hola? ¿Hay alguien allí?");
          break;
      case eModePush:
          cCharacter.Say("Nada, no se mueve.");
          break;
      case eModePull:
          cCharacter.Say("Nada, no se mueve");
          break;
      case eModeInteract:
          cCharacter.Say("No pasa nada");
          break;
    }
    resetGUI();

}

function hHotspot3_AnyClick()
{
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("Parece ser que no va.");          
          break;
      case eModeClose:
          cCharacter.Say("Ya está cerrado");
          break;
      case eModeUseinv:
          cCharacter.Say("Mejor no...");
          break;
      case eModePickup:
          cCharacter.Say("Si ahora mismo cojo el ascensor y me lo guardo en el bolsillo."); 
          break;
      case eModeLookat:
          cCharacter.Say("Maldito ascensor estropeado, me ha hecho subir 7 pisos a pie.");
          break;
      case eModeTalkto:
          cCharacter.Say("Mejor no.");
          break;
      case eModePush:
          cCharacter.Say("Mejor no.");
          break;
      case eModePull:
          cCharacter.Say("Mejor no.");
          break;
      case eModeInteract:
          cCharacter.Say("Nada no se mueve.");
          break;
    }
    resetGUI();


}

function room_Load()
{
  cCharacter.Transparency=100;
  cCharacter.SetWalkSpeed(5, 5);
  cDoor.Clickable=false;
  cDoor.Transparency=100;
  mouse.Mode=eModeWalkto;
  cCharacter.FaceDirection(eDirectionRight);

}
