import function updateInventoryCant(String, InventoryItem *, bool);
import function animationPickUpOrOpen(int loop);
import function resetGUI();
import function loseAllInventory();

// room script file

function room_AfterFadeIn()
{
  cHorno.Animate(0, 10, eRepeat, eNoBlock, eForwards);
  cCartelLuminoso.Animate(0, 20, eRepeat, eNoBlock, eForwards);
  //Room.SetProperty("animation",false);
  
  

  
  if(Room.GetProperty("animation")==true)
  {
    SetViewport(0, 0);
    gGui1.Visible=false;
      telefonoSonando.Play(eAudioPriorityHigh);
      cCharacter.SetWalkSpeed(5, 5);
      cCharacter.Walk(74, 295, eBlock, eWalkableAreas);
      telefonoSonando.Stop();
      dDialog1.Start();
      mouse.Mode= eModeWalkto;
  }
  
  //gGui1.Visible=true;
  //aPizzeriaBackground.Play(eAudioPriorityHigh,eRepeat);
 // mouse.Mode= eModeWalkto;
  
  
}

function region1_WalksOnto()
{
    if(cCharacter.HasInventory(iCajaPizza) &&
      cCharacter.HasInventory(iLlavesMoto) &&
      cCharacter.HasInventory(iCasc)){
      cCharacter.ChangeRoom(3);
  } else {
    cCharacter.Say("Todavia no puedo irme, me faltan cosas");
  }
}

function hHotspot3_Open()
{
  cCharacter.Walk(462, 270, eBlock, eWalkableAreas);
  int i = hHotspot3.GetProperty("state");
  switch(i){
    case 0:
      aFart.Play(eAudioPriorityHigh);
      Wait(3);
      cCharacter.Say("¡OCUPADO!");
      break;
    default:
      cCharacter.Say("Creo que sera mejor no molestar...");
      break;
  }
  hHotspot3.SetProperty("state",i+1);
}

function hHotspot1_Open()
{
  dDialog2.Start();
  resetGUI();
  
}

//Telefono
function hHotspot6_Interact()
{
  cCharacter.Walk(83, 305, eBlock, eWalkableAreas);
  //dDialog1.Start();
  resetGUI();
}

//ventana
function hHotspot8_Lookat(){
  
  int i = hHotspot8.GetProperty("state");
  switch(i){
    case 0:
      aCar_brake_crash.Play(eAudioPriorityHigh);
      Wait(30);
      aCat_Scream.Play(eAudioPriorityHigh);
      Wait(3);
      cCharacter.Say("Ostras! que han atropellado a un gato...");
      break;
    default:
      cCharacter.Say("Creo que sera mejor no mirar mas...");
      break;
  }
  hHotspot8.SetProperty("state",i+1);
  
  resetGUI();
}



function hHotspot5_UseInv()
{
   cCharacter.Walk(226, 289, eBlock, eWalkableAreas);
   
   if(player.ActiveInventory == iPina){
     
     oMesaBlocked.Visible = false;
     oTablePizza.Visible = true;
     Wait(40);
     player.LoseInventory(player.ActiveInventory);
     oTablePizza.Visible = false;
     oMesaBlocked.Visible = true;
     }
  resetGUI();
}

function oMesaBlocked_UseInv()
{
   cCharacter.Walk(226, 289, eBlock, eWalkableAreas);
   String ingredientes = oMesaBlocked.GetTextProperty("Ingredients");
   int cont=0;
    if(ingredientes.Length < 6){
        switch(player.ActiveInventory){
          
          case iTomate: 
              cont=player.ActiveInventory.GetProperty("contador");
              cont--;
              
              updateInventoryCant("Tomate", iTomate, false);
              
              player.LoseInventory(iTomate);
              
              
              oMesaBlocked.SetTextProperty("Ingredients",ingredientes.Append("1"));
              break;
          
          case iPeperoni: 
              cont=player.ActiveInventory.GetProperty("contador");
              cont--;
              updateInventoryCant("Peperoni", iPeperoni, false);
              
              player.LoseInventory(iPeperoni);
              oMesaBlocked.SetTextProperty("Ingredients",ingredientes.Append("2"));

              break;
              
          case iBacon:
              cont=player.ActiveInventory.GetProperty("contador");
              cont--;
              
              updateInventoryCant("Bacon", iBacon, false);
              player.LoseInventory(iBacon);
              oMesaBlocked.SetTextProperty("Ingredients",ingredientes.Append("3"));
              break;
              
          case iQueso:
              cont=player.ActiveInventory.GetProperty("contador");
              cont--;
              
              updateInventoryCant("Queso", iQueso, false);
              player.LoseInventory(iQueso);
              oMesaBlocked.SetTextProperty("Ingredients",ingredientes.Append("4"));
              break;
              
          default:
          
              if(player.ActiveInventory == iPina || player.ActiveInventory == iTofu){
                  cont=player.ActiveInventory.GetProperty("contador");
                  cont--;
                  if(player.ActiveInventory == iPina) updateInventoryCant("Piña", iPina, false);
                  if(player.ActiveInventory == iTofu) updateInventoryCant("Tofu", iTofu, false);
                  player.LoseInventory(player.ActiveInventory);
                  oMesaBlocked.SetTextProperty("Ingredients",ingredientes.Append("0"));
                
                }
          }
              
    }
    ingredientes=oMesaBlocked.GetTextProperty("Ingredients");
    if(ingredientes.Length == 6){
      
          oMesaBlocked.Visible = false;
          oTablePizza.Visible = true;
      
      }   
      
  resetGUI();
}

function hMesaDeTrabajo_UseInv()
{
   if(player.ActiveInventory == iMasaPizza){
      oMesaBlocked.Visible = true;
      player.LoseInventory(player.ActiveInventory);
   }
   resetGUI();
}

function Nevera_Look()
{
  cCharacter.Say("Aquí están todos los ingredientes para hacer pizzas, ese señor tan raro me ha pedido...");
  cCharacter.Say("Masa con salsa de tomate, doble de peperoni");
  cCharacter.Say("Doble de queso, y bacon");

}

function oTablePizza_Interact()
{
    cCharacter.Walk(226, 289, eBlock, eWalkableAreas);

      String ingredientes = oMesaBlocked.GetTextProperty("Ingredients");
      int tomaquet = 0;
      int pepperoni= 0;
      int bacon=0;
      int formatge=0;
      for(int i = 0; i<6; i++){
        
          switch(ingredientes.Chars[i])
          {
            case '0':
                  i = 7;
                  break;
                  
            case '1': 
                  tomaquet++;
                  break;
            case '2':
                  pepperoni++;
                  break;
            case '3':
                  bacon++;
                  break;
            case '4': 
                  formatge++;
                  break;            
            }
        
        }
        
      if(tomaquet == 1 && formatge == 2 && bacon == 1 && pepperoni == 2){
        player.AddInventory(iPizzaOkNoC);
      }else{
          player.AddInventory(iPizzaMalaNoC);
        }
      oTablePizza.Visible = false;
      oMesaBlocked.SetTextProperty("Ingredients","");

}

function oCasc_PickUp()
{
    player.AddInventory(iCasc);
    oCasc.Visible = false;
}

function repeatedly_execute_always()
{
  
  if (!cRat.Moving && cRat.GetProperty("interact")==false)
  {
    switch(cRat.GetProperty("ratState")){
      case 0:
         if(IsTimerExpired(1)){
            cRat.x=523;
            cRat.y=272;
            cRat.Transparency=0;
            cRat.Clickable=true;
            cRat.SetProperty("ratState",1);
         }
         break;
      case 1:
        cRat.Walk(523, 272, eNoBlock, eWalkableAreas);
        cRat.SetProperty("ratState",2);
        break;
      case 2:
          cRat.Walk(274, 272, eNoBlock, eWalkableAreas);
          cRat.SetProperty("ratState",3);
        break;
      case 3:
        cRat.Transparency=100;
        cRat.Clickable=false;
        cRat.SetProperty("ratState",0);
        SetTimer(1, GetGameSpeed() *10);
        break;
    }
  }
    
}

function MoveRat(){
  if(cRat.Transparency!=0){
    cRat.x=523;
    cRat.y=272;
    cRat.Transparency=0;
  }
  cRat.Walk(512, 283, eBlock, eWalkableAreas);
  
  Wait(3);
  aLlaves_suelo.Play();
  oIngredient.Graphic=28;

  cRat.Walk(274, 272, eBlock, eWalkableAreas) ;
}

function GetPuzzleResult(bool correct){
  MoveRat();
  if(correct){
    //oIngredient.Graphic=28;
    oIngredient.Clickable=true;
    cCharacter.Say("Mira quien tenia las llaves!!");
    cCharacter.Say("Esta rata cada dia me roba mas cosas...");
  }
  cRat.SetProperty("interact",false);
}

function hHotspot9_UseInv()
{
  int ingredient;
  bool correct=false;
  cCharacter.Walk(512, 287, eBlock, eWalkableAreas);
  /*
    Como tenemos el objeto "ingrediente" sin ningun Sprite asignado
    Para simular que estamos dejando el objecto en el suelo asignaremos el Sprite
    del inventario activo al frame del objecto "ingrediente"
    Para saber que numero tiene asignado cada Sprite hay que acudir a la ventana de
    Sprites donde se podrá observar que debajo de cada imagen tiene un numero asignado
  */
  switch(player.ActiveInventory){
    case iPina:
        ingredient=7;
        break;
    case iTomate:
        ingredient=19;
        break;
    case iTofu:
        ingredient=64;
        correct=true;
        break;
    case iBacon:
        ingredient=14;
        break;
  }
  
  /*Realizamos el canvio de Sprite y eliminamos el objeto del inventario del usuario
    De cara al usuario dará la sensación que lo esta dejando en el suelo, pero en realidad
    ese objeto ya se encontraba en esa posición pero oculto*/
  
  if(player.ActiveInventory==iTofu || player.ActiveInventory==iQueso){
      
      if(player.ActiveInventory==iTofu){
            oIngredient.Graphic=ingredient;
            player.LoseInventory(player.ActiveInventory);
            cRat.SetProperty("interact",true);
            cCharacter.Walk(310, 290, eBlock, eWalkableAreas);
            GetPuzzleResult(correct);
        }else{
            aRata.Play();
            Wait(65);
            cCharacter.Say("Como se me ha ocurrido ofrecerle queso al pobre Rádagan, cuando todos sabemos que es una rata vegana");
          
          }
      
  }
}




function oIngredient_Interact()
{
  oIngredient.Graphic=0;
  oIngredient.Clickable=false;
  player.AddInventory(iLlavesMoto);
  mouse.Mode= eModeWalkto;
  resetGUI();
}

function hHotspot3_LookAt()
{
  cCharacter.Say("Es la puerta del lavabo, mi jefe lleva ahí dentro desde hace mucho rato");
  cCharacter.Say("Creo que no se encuentra muy bien del estómago");
}

function Nevera_AnyClick()
{
  
  if(mouse.Mode != eModeLookat){
    cCharacter.Walk(300, 290, eBlock, eWalkableAreas);
    player.FaceDirection(eDirectionLeft);
  }
  
  switch(mouse.Mode){
    case eModeOpen: 
        hHotspot1_Open();
        break;
    case eModeClose:
        cCharacter.Say("Ya esta cerrada");
        break;
    case eModeGiveto:
        cCharacter.Say("Mejor no");
        break;
    case eModePickup:
        cCharacter.Say("Si claro, ahora mismo me cargo la nevera en la espalda y me la llevo");
        //interaccion del personaje para mirar al jugador
        break;
    case eModeLookat:
        Nevera_Look();
        break;
    case eModeTalkto:
        cCharacter.Say("Prefiero no hablar con neveras, no son de fiar");
        break;
    case eModePush:
        cCharacter.Say("Mejor no");
        break;
    case eModePull:
        cCharacter.Say("No me la quiero tirar encima");
        break;
    case eModeInteract:
        hHotspot1_Open();
        break;
    default:
        cCharacter.Say("No se puede hacer");
    
  }
  resetGUI();
}


//Interaccion con la puerta Lavabo
function hHotspot3_AnyClick()
{
  if(mouse.Mode != eModeLookat){
    cCharacter.Walk(450, 290, eBlock, eWalkableAreas);
    player.FaceDirection(eDirectionRight);
  }
    switch(mouse.Mode){
      case eModeOpen: 
          hHotspot3_Open();
          break;
      case eModeClose:
          cCharacter.Say("Ya esta cerrada, pero con lo que esta ocurriendo allí dentro...");
          cCharacter.Say("mejor asegurarse bien");
          break;
      case eModeGiveto:
          cCharacter.Say("Mejor no");
          break;
      case eModePickup:
          cCharacter.Say("Ahora mismo cojo la puerta y me marcho");
          break;
      case eModeLookat:
          hHotspot3_LookAt();
          break;
      case eModeTalkto:
          cCharacter.Say("Dialogo hablar");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      case eModeInteract:
          cCharacter.Say("Mejor no");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
}

//9 verbos con la papelera
function hHotspot2_AnyClick()
{
  if(mouse.Mode != eModeLookat){
    cCharacter.Walk(350, 290, eBlock, eWalkableAreas);
    player.FaceDirection(eDirectionRight);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("No tiene tapa");
          break;
      case eModeClose:
          cCharacter.Say("No tiene tapa");
          break;
      case eModeGiveto:
          cCharacter.Say("Prefiero no tocarla mucho");
          break;
      case eModePickup:
          cCharacter.Say("Mejor no, me da un poco de asquete");
          break;
      case eModeLookat:
          cCharacter.Say("Una papelera para tirar basura ¡Sólo orgánico!");
          cCharacter.Say("Hay que pensar en el medio ambiente");
          break;
      case eModeTalkto:
          cCharacter.Say("El dia que me dedique a hablar con papeleras me preocuparé");
          cCharacter.Say("Por suerte todavia no ha llegado");
          break;
      case eModePush:
          cCharacter.Say("No quiero tener que recojerla luego");
          break;
      case eModePull:
          cCharacter.Say("No quiero tener que recojerla luego");
          break;
      case eModeInteract:
          cCharacter.Say("Mejor no");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    
    resetGUI();
}


//9 verbos relacionados con la ventana
function hHotspot8_AnyClick()
{
  if(mouse.Mode != eModeLookat){
      cCharacter.Walk(63, 323, eBlock, eWalkableAreas);
      player.FaceDirection(eDirectionLeft);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("Mejor no abrirla, que pueden entrar bichos");
          break;
      case eModeClose:
          cCharacter.Say("Ya esta cerrada");
          break;
      case eModeGiveto:
          cCharacter.Say("No tiene sentido");
          break;
      case eModePickup:
          cCharacter.Say("¿Coger una ventana? \n¿En serio?");
          //falta interaccion de mirar al usuario
          break;
      case eModeLookat:
          hHotspot8_Lookat();
          break;
      case eModeTalkto:
          cCharacter.Say("No hay nadie al otro lado");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      case eModeInteract:
          cCharacter.Say("Mejor no");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    
    resetGUI();
}

//Telefono
function hHotspot6_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(74, 295, eBlock, eWalkableAreas);
      player.FaceDirection(eDirectionLeft);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("No tiene sentido");
          break;
      case eModeClose:
          cCharacter.Say("No tiene sentido");
          break;
      case eModeGiveto:
          cCharacter.Say("No tiene sentido");
          break;
      case eModePickup:
          cCharacter.Say("Esta pegado a la pared");
          break;
      case eModeLookat:
          cCharacter.Say("Nuestro telefono para atender a los clientes");
          break;
      case eModeTalkto:
          cCharacter.Say("Antes tendré que llamar a alguien");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      case eModeInteract:
          //hHotspot6_Interact();
          cCharacter.Say("No puedo usar el telefono de momento");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    resetGUI();
}

function oCasc_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(83, 346, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("No se abre");
          break;
      case eModeClose:
          cCharacter.Say("Mejor no");
          break;
      case eModeGiveto:
          cCharacter.Say("Mejor no");
          break;
      case eModePickup:
          oCasc_PickUp();
          break;
      case eModeLookat:
          cCharacter.Say("Mi casco de la moto, lo necesitaré para entregar la pizza");
          break;
      case eModeTalkto:
          cCharacter.Say("¿Casquito como estas hoy?");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      case eModeInteract:
          //hHotspot6_Interact();
          cCharacter.Say("De momento no lo puedo usar");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
}

//Agujero de la rata
function hHotspot9_AnyClick()
{
  if(mouse.Mode != eModeLookat){
      cCharacter.Walk(500, 295, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("Está abierto");
          break;
      case eModeClose:
          cCharacter.Say("No se puede cerrar");
          break;
      case eModeGiveto:
          cCharacter.Say("No tiene sentido");
          break;
      case eModePickup:
          cCharacter.Say("Coger un agujero, claro, lástima que en el bolsillo solo me quepa medio");
          break;
      case eModeLookat:
          cCharacter.Say("Allí dentro está la casa del pequeño Rádagan, él si que vive bien");
          break;
      case eModeTalkto:
          cCharacter.Say("Mejor hablo con Rádagan");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      case eModeInteract:
          cCharacter.Say("No puedo usar nada de momento");
          break;
      case eModeUseinv: 
          hHotspot9_UseInv();
          break;              
      default:
          cCharacter.Say("No se puede hacer");
    }
    resetGUI();
}

//puerta salida
function hHotspot4_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(550, 305, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeInteract:
      case eModeOpen:
          //region1_WalksOnto();
          if(cCharacter.HasInventory(iCajaPizza) &&
              cCharacter.HasInventory(iLlavesMoto) &&
              cCharacter.HasInventory(iCasc)){
              loseAllInventory();
              player.AddInventory(iCajaPizza);
              cCharacter.ChangeRoom(3);
          } else {
              cCharacter.Say("Todavia no puedo irme, me faltan cosas");
              cCharacter.Say("Necesito coger la entregar la pizza y tengo que coger el caso y las llaves de la moto");
          }
          
          break;
      case eModeClose:
          cCharacter.Say("Ya está cerrada");
          break;
      case eModeGiveto:
          cCharacter.Say("No tiene sentido");
          break;
      case eModePickup:
          cCharacter.Say("Ahora mismo cojo la puerta y me marcho");
          //falta interaccion de mirar el personaje al jugador 
          break;
      case eModeLookat:
          cCharacter.Say("La puerta de salida, cuando tenga todo listo me iré por aquí");
          break;
      case eModeTalkto:
          cCharacter.Say("No hay nadie al otro lado");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      
      default:
          cCharacter.Say("No se puede hacer");
    }
    resetGUI();
}

//caja de pizzas
function hHotspot10_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(140, 345, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("No hace falta");          
          break;
      case eModeClose:
          cCharacter.Say("Ya están cerradas");
          break;
      case eModeGiveto:
          cCharacter.Say("No creo que las quiera");
          break;
      case eModePickup:
          //falta accion coger caja pizza para añadirla al inventario
          player.AddInventory(iCajaPizzaVacia);
          break;
      case eModeLookat:
          cCharacter.Say("Me encanta el nuevo diseño que hemos pedido para nuestras cajas");
          break;
      case eModeTalkto:
          cCharacter.Say("No gracias, he pasado esa fase");
          break;
      case eModePush:
          cCharacter.Say("No quiero tener que recogerlas de nuevo");
          break;
      case eModePull:
          cCharacter.Say("No quiero tener que recogerlas de nuevo");
          break;
      case eModeInteract:
          cCharacter.Say("De momento no puedo usarlas");
          break;
      case eModeUseinv:
          if(player.ActiveInventory==iPizzaOK)
          {
            player.LoseInventory(iPizzaOK);
            player.AddInventory(iCajaPizza);
          }
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    resetGUI();
}

//Restos de pizza
function hHotspot11_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(350, 350, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("Ya está abierta");          
          break;
      case eModeClose:
          cCharacter.Say("Será mejor limpiarlo luego, no vaya a ser que confunda las cajas");
          break;
      case eModeGiveto:
          cCharacter.Say("No creo que lo quiera");
          break;
      case eModePickup:
          cCharacter.Say("Puaj! no, mejor luego lo limpio"); 
          break;
      case eModeLookat:
          cCharacter.Say("Ya podrian haberla tirado a la basura, siempre me toca limpiar los restos");
          break;
      case eModeTalkto:
          cCharacter.Say("Resto de pizza, tú eres el único que me comprende");
          break;
      case eModePush:
          cCharacter.Say("No quiero tener que recogerlo luego");
          break;
      case eModePull:
          cCharacter.Say("No quiero tener que recogerlo luego");
          break;
      case eModeInteract:
          cCharacter.Say("De momento no puedo usarlo");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    resetGUI();
}

//Surtidor de bebidas
function hHotspot12_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(450, 350, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("No se puede abrir");          
          break;
      case eModeClose:
          cCharacter.Say("No se puede cerrar");
          break;
      case eModeGiveto:
          cCharacter.Say("No se puede");
          break;
      case eModePickup:
          cCharacter.Say("Ya me gustaria llevármelo, pero posiblemente mi jefe me mataria"); 
          break;
      case eModeLookat:
          cCharacter.Say("¡Las mejores bebidas en la mejor pizzeria! Copsi cola, Kanta Naranja, 7down y la cerveza Luna Gamm");
          break;
      case eModeTalkto:
          cCharacter.Say("Emm no gracias");
          break;
      case eModePush:
          cCharacter.Say("No quiero romperlo");
          break;
      case eModePull:
          cCharacter.Say("No quiero romperlo");
          break;
      case eModeInteract:
          cCharacter.Say("De momento no puedo usarlo");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    
    resetGUI();
}

//Caja registradora
function hHotspot13_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(575, 345, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cHelp.Say("¡NO TE ACERQUES A LA CAJA! ¡No después de la que liaste la última vez!");
          cCharacter.Say("Como sabe que iba abrirla?");
          cCharacter.Say("Además... Quien iba a pensar que aquel billete de un Gritón de dólares era falso...");
          break;
      case eModeClose:
          cCharacter.Say("Está cerrada");
          break;
      case eModeGiveto:
          cCharacter.Say("Mejor no");
          break;
      case eModePickup:
          cHelp.Say("¡NO TE ACERQUES A LA CAJA! ¡No después de la que liaste la última vez!");
          cCharacter.Say("Como sabe que iba abrirla?");
          cCharacter.Say("Además... Quien iba a pensar que aquel billete de un Gritón de dólares era falso...");
          break;
      case eModeLookat:
          cCharacter.Say("Nuestra gran caja registradora, donde guardamos nuestros millones");
          break;
      case eModeTalkto:
          cCharacter.Say("Cajita cajita, tu que eres la más bonita...");
          break;
      case eModePush:
          cCharacter.Say("No que se enfadará el jefe");
          break;
      case eModePull:
          cCharacter.Say("No que se enfadará el jefe");
          break;
      case eModeInteract:
          cCharacter.Say("De momento no puedo usarlo");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    
    resetGUI();
}

//Calendario
function hHotspot14_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(345, 280, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("No se abre");          
          break;
      case eModeClose:
          cCharacter.Say("No se cierra");
          break;
      case eModeGiveto:
          cCharacter.Say("No, que a mi jefe le gusta mucho");
          break;
      case eModePickup:
          cCharacter.Say("No que a mi jefe le gusta mucho"); 
          break;
      case eModeLookat:
          cCharacter.Say("15 de abril de 2018, hoy será un gran dia");
          break;
      case eModeTalkto:
          cCharacter.Say("No es de esos calendarios que responden con voz");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      case eModeInteract:
          cCharacter.Say("De momento no puedo usarlo");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    
    resetGUI();
}

function oCuchillo_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(245, 285, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          cCharacter.Say("No se abre");          
          break;
      case eModeClose:
          cCharacter.Say("No se cierra");
          break;
      case eModeGiveto:
          cCharacter.Say("No creo que lo quiera");
          break;
      case eModePickup:
          player.AddInventory(iCuchillo);
          oCuchillo.Visible=false;
          break;
      case eModeLookat:
          cCharacter.Say("Un cuchillo ¡Cuidado que corta!");
          break;
      case eModeTalkto:
          cCharacter.Say("Todavía no he llegado al punto de querer hablar con cuchillos");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      case eModeInteract:
          cCharacter.Say("De momento no puedo usarlo");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
    resetGUI();
}

//TAQUILLA DE LAS LLAVES ABIERTA
function oTaqAbr_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(475, 280, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          animationPickUpOrOpen(8);
          cCharacter.Say("Ya está abierta");          
          break;
      case eModeClose:
          cCharacter.Say("Mejor no la vuelvo a cerrar");
          break;
      case eModeGiveto:
          cCharacter.Say("Mejor no");
          break;
      case eModePickup:
          animationPickUpOrOpen(8);
          cCharacter.Say("Está incrustada en la pared"); 
          break;
      case eModeLookat:
          cCharacter.Say("Aqui no hay nada...");
          break;
      case eModeTalkto:
          cCharacter.Say("Por fin he conseguido abrirla!");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      case eModeInteract:
          cCharacter.Say("De momento no puedo usarlo");
          break;
      default:
          cCharacter.Say("No se puede hacer");
    }
}

//Taquillero de las llaves
function hHotspot15_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(475, 280, eBlock, eWalkableAreas);
  }
  
  switch(mouse.Mode){
      
      case eModeOpen:
          animationPickUpOrOpen(8);
          cCharacter.Say("No hay manera de abrirla, está atascada");          
          break;
      case eModeClose:
          cCharacter.Say("Ya está cerrada");
          break;
      case eModeGiveto:
          cCharacter.Say("Mejor no");
          break;
      case eModePickup:
          animationPickUpOrOpen(8);
          cCharacter.Say("Está incrustada en la pared");
          break;
      case eModeLookat:
          cCharacter.Say("Aqui dentro están las llaves de la moto");
          break;
      case eModeTalkto:
          cCharacter.Say("¿Qué puedo hacer para que te abras?");
          break;
      case eModePush:
          cCharacter.Say("Mejor no");
          break;
      case eModePull:
          cCharacter.Say("Mejor no");
          break;
      case eModeInteract:
          //cCharacter.Say("De momento no puedo usarlo");
          
          break;
      default:
          if(player.ActiveInventory == iCuchillo){
              animationPickUpOrOpen(8);
              aDoor_Unlock.Play();
              oTaqAbr.Visible = true;
              cCharacter.Say("Rayos, está vacía!");
            }else{
                
                cCharacter.Say("No se puede hacer");
              }
    }
    resetGUI();
}

function oIngredient_AnyClick()
{
  switch(mouse.Mode){
    case eModePickup:
          oIngredient_Interact();
          break;
  }  
}




function oTablePizza_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(226, 289, eBlock, eWalkableAreas);
      player.FaceDirection(eDirectionLeft);
  }
  
  switch(mouse.Mode){
    case eModeOpen: 
        cCharacter.Say("No se puede hacer");
        break;
    case eModeClose:
        cCharacter.Say("No se puede hacer");
        break;
    case eModeGiveto:
        cCharacter.Say("Mejor no");
        break;
    case eModePickup:
        oTablePizza_Interact();        
        break;
    case eModeLookat:
        cCharacter.Say("Aqui és donde hago mis creaciones");
        break;
    case eModeTalkto:
        cCharacter.Say("No estoy tan loco como para hablarle a una mesa");
        break;
    case eModePush:
        cCharacter.Say("Mejor no");
        break;
    case eModePull:
        cCharacter.Say("No me la quiero tirar encima");
        break;
    case eModeInteract:
        oTablePizza_Interact();
        break;
    default:
        cCharacter.Say("No se puede hacer");
    
  }
  resetGUI();
}

function oMesaBlocked_AnyClick()
{
  if(mouse.Mode != eModeLookat){
      cCharacter.Walk(226, 289, eBlock, eWalkableAreas);
      player.FaceDirection(eDirectionLeft);
  }
  
  switch(mouse.Mode){
    case eModeOpen: 
        cCharacter.Say("No se puede hacer");
        break;
    case eModeClose:
        cCharacter.Say("No se puede hacer");
        break;
    case eModeGiveto:
        cCharacter.Say("Mejor no");
        break;
    case eModePickup:
        cCharacter.Say("Mejor no, que la necesito para trabajar");
        break;
    case eModeLookat:
        cCharacter.Say("Aqui és donde hago mis creaciones");
        break;
    case eModeTalkto:
        cCharacter.Say("No estoy tan loco como para hablarle a una mesa");
        break;
    case eModePush:
        cCharacter.Say("Mejor no");
        break;
    case eModePull:
        cCharacter.Say("No me la quiero tirar encima");
        break;
    default:
        cCharacter.Say("No se puede hacer");
    
  }
  resetGUI();
}

function hMesaDeTrabajo_AnyClick()
{
    if(mouse.Mode != eModeLookat){
      cCharacter.Walk(226, 289, eBlock, eWalkableAreas);
      player.FaceDirection(eDirectionLeft);
  }
  
  switch(mouse.Mode){
    case eModeOpen: 
        cCharacter.Say("No se puede hacer");
        break;
    case eModeClose:
        cCharacter.Say("No se puede hacer");
        break;
    case eModeGiveto:
        cCharacter.Say("Mejor no");
        break;
    case eModePickup:
        oTablePizza_Interact();        
        break;
    case eModeLookat:
        cCharacter.Say("Aqui és donde hago mis creaciones");
        break;
    case eModeTalkto:
        cCharacter.Say("No estoy tan loco como para hablarle a una mesa");
        break;
    case eModePush:
        cCharacter.Say("Mejor no");
        break;
    case eModePull:
        cCharacter.Say("No me la quiero tirar encima");
        break;
    default:
        cCharacter.Say("No se puede hacer");
    
  }
  resetGUI();
}
